name: Publish

on:
  release:
    types: [published]
    
env:
  APP_NAME: semver

jobs:
  assets:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      matrix:
        target:
        - name: "x86_64-unknown-linux-gnu"
          extension: ""
        - name: "x86_64-pc-windows-msvc"
          extension: ".exe"
        - name: "x86_64-apple-darwin"
          extension: ""
        - name: "aarch64-apple-darwin"
          extension: ""

    steps:
    - uses: actions/checkout@master
    - uses: denoland/setup-deno@v1.1.0
      with:
        deno-version: v1.x
        
    
    - id: parse_version
      name: Parse the Version
      run: deno run -A main.ts parse

    # Binaries are compiled on full Release
    - name: Compile
      if: github.event_name == 'release'
      env:
        TARGET: ${{ matrix.target.name }}
        EXT: ${{ matrix.target.extension }}
      run: |
        deno --version
        deno compile --allow-run --allow-env --allow-read --allow-write -o bin/$APP_NAME --target $TARGET main.ts
        cd bin && tar -czf $APP_NAME.$TARGET.tar.gz ${APP_NAME}${EXT}
        ls -la

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      if: github.event_name == 'release'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./bin/${{ env.APP_NAME }}.${{ matrix.target.name }}.tar.gz
        asset_name: ${{ env.APP_NAME }}.${{ matrix.target.name }}.tar.gz
        asset_content_type: application/tar+gzip
        
    - name: Print Output
      if: github.event_name == 'release'
      env:
        VERSION: ${{ steps.parse_version.outputs.version }}
        TARGET: ${{ matrix.target.name }}
        DOWNLOAD_URL: ${{ github.event.release.download_url }}
        ASSET_NAME: ${{ env.APP_NAME }}.${{ matrix.target.name }}.tar.gz
      run: |
        URL="https://github.com/Optum/semver-cli/releases/download/${VERSION}/${ASSET_NAME}"
        SHA=$(cat ./bin/${{ env.APP_NAME}}.${{ matrix.target.name }}.tar.gz | sha256sum | cut -d " " -f1)
        cat >> $GITHUB_STEP_SUMMARY<<EOF
        | part       | value              |
        | ---------- | ------------------ |
        | name       | \`${APP_NAME}\`    |
        | version    | \`${VERSION}\`     |
        | target     | \`${TARGET}\`      |
        | asset      | [\`${ASSET_NAME}\`]($URL)  |
        
        #### formula

        \`\`\`rb
        url "$URL"
        sha256 "$SHA"
        \`\`\`
        EOF
